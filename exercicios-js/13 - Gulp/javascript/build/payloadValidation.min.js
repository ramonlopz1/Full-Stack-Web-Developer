const validation=o=>{var e=JSON.parse(o);const r=e.Dados.EKit,t={status:"error",message:"Informe a opção de E-KIT"};if(!r)return t;const a=e.Contratos.length,n={status:"error",message:"Contrato não informado"};if(0===a)return n;const s=Object.keys(e.DadosPagamento.Boleto).length,i={status:"error",message:"Boleto OnLine é obrigatório"};if(0===s)return i;const d=e.DadosPagamento.Boleto.Email,l={status:"error",message:"Email de Boleto OnLine não informado"};if(!d)return l;const u=e.DadosPagamento.Boleto.Nome,c={status:"error",message:"Nome de Boleto OnLine não informado"};if(!u)return c;const m=Object.keys(e.Contratos[0].PlanoContratadoSaude).length,f=Object.keys(e.Contratos[0].PlanoContratadoDental).length,C={status:"error",message:"Nenhum Plano foi informado"};if(0===m&&0===f)return C;const g=e.Empresa.Endereco,h={status:"error",message:"Insc. Estadual não informada"};if(!g)return h;const E=e.Empresa.InscricaoEstadual,p={status:"error",message:"Endereço não informado"};if(!E)return p;const T=e.Empresa.Endereco.Endereco.Cep,b={status:"error",message:"Informe o CEP do Endereço"};if(!T)return b;o={telefone1:e.Empresa.Endereco.Telefone,telefone2:e.Empresa.EnderecoCorrespondencia.Telefone,telefone3:e.Empresa.ContatoComercial.Telefone,telefone4:e.Empresa.ContatoFaturamento.Telefone,get field(){return this.telefone1||this.telefone2||this.telefone3||this.telefone4},catch:{status:"error",message:"Informe pelo menos um telefone"}};if(!o.field)return o.catch;const D=e.Responsavel.Cpf,P={status:"error",message:"CPF do responsável não informado"};if(!D)return P;o={bairro1:e.Empresa.Endereco.Endereco.Bairro,bairro2:e.Empresa.EnderecoCorrespondencia.Endereco.Bairro,get field(){return this.bairro1||this.bairro2},catch:{status:"error",message:"Informe o bairro"}};if(!o.field)return o.catch;o={logradouro1:e.Empresa.Endereco.Endereco.Logradouro,logradouro2:e.Empresa.EnderecoCorrespondencia.Endereco.Logradouro,get field(){return this.logradouro1||this.logradouro2},catch:{status:"error",message:"Informe o Nome do Logradouro"}};if(!o.field)return o.catch;o={numero1:e.Empresa.Endereco.Endereco.Numero,numero2:e.Empresa.EnderecoCorrespondencia.Endereco.Numero,get field(){return this.numero1||this.numero2},catch:{status:"error",message:"Informe o número do endereço"}};if(!o.field)return o.catch;if(titularEmail={field:e.Contratos[0].Titular.Contato.Email,catch:{status:"error",message:"Para Adesão ao Boleto OnLine o Email é obrigatório"}},!titularEmail.field)return titularEmail.catch;o={numero1:e.Contratos[0].Titular.Endereco.Numero,numero2:e.Contratos[0].Titular.EnderecoCorrespondencia.Numero,numero3:e.Contratos[0].Titular.Contato.Endereco.Numero,get field(){return this.numero1||this.numero2||this.numero3},catch:{status:"error",message:"Número do endereço não informado"}};if(!o.field)return o.catch;o={logradouro1:e.Contratos[0].Titular.Endereco.Logradouro,logradouro2:e.Contratos[0].Titular.EnderecoCorrespondencia.Logradouro,logradouro3:e.Contratos[0].Titular.Contato.Endereco.Logradouro,get field(){return this.logradouro1||this.logradouro2||this.logradouro3},catch:{status:"error",message:"Informe o Nome do Logradouro"}};if(!o.field)return o.catch;const I=e.Contratos[0].Titular.Cpf,N={status:"error",message:"CPF do Titular não informado"};if(!I)return N;o={bairro1:e.Contratos[0].Titular.Endereco.Bairro,bairro2:e.Contratos[0].Titular.EnderecoCorrespondencia.Bairro,bairro3:e.Contratos[0].Titular.Contato.Endereco.Bairro,get field(){return this.bairro1||this.bairro2||this.bairro3},catch:{status:"error",message:"Informe o bairro"}};if(!o.field)return o.catch;o={cidade1:e.Contratos[0].Titular.Endereco.Cidade,cidade2:e.Contratos[0].Titular.EnderecoCorrespondencia.Cidade,cidade3:e.Contratos[0].Titular.Contato.Endereco.Cidade,get field(){return this.cidade1||this.cidade2||this.cidade3},catch:{status:"error",message:"Informe o Município"}};if(!o.field)return o.catch;const v=e.Contratos[0].Dependentes[0].Dependente.Cpf,V={status:"error",message:"CPF do Dependente não informado"};if(!v)return V;o={contato1:e.Contratos[0].Titular.Contato.TelefoneResidencial,contato2:e.Contratos[0].Titular.Contato.TelefoneCelular,contato3:e.Contratos[0].Titular.Contato.Telefone,get field(){return this.contato1||this.contato2||this.contato3},catch:{status:"error",message:"Nenhum contato foi informado"}};if(!o.field)return o.catch;o={cidade1:e.Empresa.Endereco.Endereco.Cidade,cidade2:e.Empresa.EnderecoCorrespondencia.Endereco.Cidade,get field(){return this.cidade1||this.cidade2},catch:{status:"error",message:"Informe o Município"}};if(!o.field)return o.catch;const B=e.Contratos[0].Titular.Nome,S={status:"error",message:"Nome Contratante não informado."};if(!B)return S;const L=e.Contratos[0].Titular.DataNascimento,O={status:"error",message:"Nome Contratante não informado."};if(!L)return O;const x=e.Contratos[0].Titular.NomeMae,A={status:"error",message:"Nome Mãe Titular não informado"};if(!x)return A;o={plano1:e.Contratos[0].PlanoContratadoSaude.CodigoPlano,plano2:e.Contratos[0].PlanoContratadoDental.CodigoPlano,get field(){return this.plano1||this.plano2},catch:{status:"error",message:"Informe o plano"}};if(!o.field)return o.catch;o={plano1:e.Contratos[0].PlanoContratadoSaude.CodigoPrc,plano2:e.Contratos[0].PlanoContratadoDental.CodigoPrc,get field(){return this.plano1||this.plano2},catch:{status:"error",message:"PRC não informado"}};if(!o.field)return o.catch;const M=e.DadosComissionado.CpfCorretor,z={status:"error",message:"Corretor não informado"};if(!M)return z;o={taxaAdesao:e.TotalizadorCobranca.ValorTaxaAdesao,mensalidadeSaude:e.TotalizadorCobranca.ValorTotalMensalidadeSaude,mensalidadeDental:e.TotalizadorCobranca.ValorTotalMensalidadeDental,totalAditivos:e.TotalizadorCobranca.ValorTotalAditivos,totalProposta:e.TotalizadorCobranca.ValorTotalProposta,totalDescontos:e.TotalizadorCobranca.ValorTotalDescontos,get field(){return this.taxaAdesao&&this.mensalidadeSaude&&this.mensalidadeDental&&this.totalAditivos&&this.totalProposta&&this.totalDescontos},catch:{status:"error",message:"Informe o Valor Total"}};if(!o.field)return o.catch;o={valor1:e.Contratos[0].Titular.ValorCobrado.ValorSaude.Valor,valor2:e.Contratos[0].Titular.ValorCobrado.ValorSaude.Valor,get field(){return this.valor1&&this.valor2},catch:{status:"error",message:"Informe o Valor Total"}};if(!o.field)return o.catch;const F=e.Contratos[0].Titular.EstadoCivil,R={status:"error",message:"Informe o Estado Civil do titular"};if(!F)return R;const j=e.Contratos[0].Titular.Sexo,k={status:"error",message:"Informe o Sexo do Beneficiário"};if(!j)return k;const y=e.Contratos[0].Dependentes[0].Dependente.Sexo,K={status:"error",message:"Informe o Sexo do Dependente"};if(!y)return K;const J=e.Contratos[0].Dependentes[0].Dependente.NomeMae,q={status:"error",message:"Nome da mãe do dependente/agregado não informado"};if(!J)return q;const w=e.Contratos[0].Dependentes[0].Dependente.EstadoCivil,G={status:"error",message:"Informe o Estado Civil do dependente"};if(!w)return G;const H=e.Responsavel.EstadoCivil,Q={status:"error",message:"Informe o Estado Civil do responsável"};return H?"sucess":Q};console.log(validation(file));